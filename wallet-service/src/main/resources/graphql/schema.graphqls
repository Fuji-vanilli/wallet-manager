type Query {
    userWallets: [WalletResponse],
    walletById(id: String): WalletResponse
}

type Mutation {
    addWallet(request: WalletRequest): WalletResponse,
    proceed(request: WalletTransactionRequest): WalletTransactionResponse
}

input WalletRequest {
    balance: Float,
    userID: String,
    currencyCode: String
}

input WalletTransactionRequest {
    amount: Float,
    type: String,
    walletDestinationID: String
}

type WalletTransactionResponse {

}

type WalletResponse {
    id: String,
    balance: Float,
    createdAt: Float,
    currency: Currency,
    walletTransactions: [WalletTransaction]
}

type Currency {
    code: String,
    name: String,
    symbol: String,
    salePrice: Float,
    purchasePrice: Float
}

type WalletTransaction {
    id: Float,
    amount: Float,
    timestamp: Float,
    type: String,
    walletDestinationID: String,
    wallet: WalletResponse
}
